/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ilemo.viewer.view;

import com.sun.jna.platform.FileUtils;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.TrayIcon;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import lk.ilemo.viewer.dto.UserDTO;
import lk.ilemo.viewer.service.custom.Broker;
import lk.ilemo.viewer.view.other.SysTray;
import lk.ilemo.viewer.view.panles.Desktop;

/**
 *
 * @author Chamindu_Appuhamy
 */
public class Viewer extends javax.swing.JFrame {

    private BufferedImage imgAppu;
    private int Screenwidth;
    private int Screenheight;
    private Broker broker;
    private int screenWidth;
    private int screenHeight;
    private int mouseSignal = 0;
    private File[] files;
    private int KeyBoardFocusManagerSignal = 0;
    private int ThreadSignal = 0;

    /**
     * Creates new form ClientForm
     */
    public Viewer() {
        initComponents();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    UIManager.put("ToolTip.background", new Color(0, 0, 0, 200));
                    UIManager.put("ToolTip.border", new EmptyBorder(5, 5, 5, 5));
                    UIManager.put("ToolTip.foreground", new Color(255, 255, 255));//ToollTipConfugeration
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    public Viewer(Broker broker) {
        initComponents();
        //setExtendedState(6);
        this.broker = broker;//Setting Broker

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    UIManager.put("ToolTip.background", new Color(0, 0, 0, 200));
                    UIManager.put("ToolTip.border", new EmptyBorder(5, 5, 5, 5));
                    UIManager.put("ToolTip.foreground", new Color(255, 255, 255));//ToollTipConfugeration
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        pnlLive = new javax.swing.JPanel(){
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                if (imgAppu != null){
                    g.drawImage(imgAppu, 0, 0,
                        pnlLive.getWidth(),
                        pnlLive.getHeight(), null);
                }
            }
        };
        jPanel1 = new javax.swing.JPanel();
        oneToMany = new javax.swing.JLabel();
        oneToOneLbl = new javax.swing.JLabel();
        fileTransferLbl = new javax.swing.JLabel();
        videoCallLbl = new javax.swing.JLabel();
        EmailSendBtn = new javax.swing.JLabel();
        voiceCallLbl = new javax.swing.JLabel();
        txtChatLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlLive.setBackground(new java.awt.Color(0, 0, 0));
        pnlLive.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlLiveMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlLiveMouseMoved(evt);
            }
        });
        pnlLive.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                pnlLiveMouseWheelMoved(evt);
            }
        });
        pnlLive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlLiveMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlLiveLayout = new javax.swing.GroupLayout(pnlLive);
        pnlLive.setLayout(pnlLiveLayout);
        pnlLiveLayout.setHorizontalGroup(
            pnlLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1894, Short.MAX_VALUE)
        );
        pnlLiveLayout.setVerticalGroup(
            pnlLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1298, Short.MAX_VALUE)
        );

        scrollPane.setViewportView(pnlLive);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        oneToMany.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/screenScale.png"))); // NOI18N
        oneToMany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oneToManyMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                oneToManyMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                oneToManyMouseReleased(evt);
            }
        });

        oneToOneLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/one_to_one.png"))); // NOI18N
        oneToOneLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oneToOneLblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                oneToOneLblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                oneToOneLblMouseReleased(evt);
            }
        });

        fileTransferLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/send_file.png"))); // NOI18N
        fileTransferLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileTransferLblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fileTransferLblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fileTransferLblMouseReleased(evt);
            }
        });

        videoCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/video_call.png"))); // NOI18N
        videoCallLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                videoCallLblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                videoCallLblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                videoCallLblMouseReleased(evt);
            }
        });

        EmailSendBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/Gmail_Fill.png"))); // NOI18N
        EmailSendBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmailSendBtnMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EmailSendBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                EmailSendBtnMouseReleased(evt);
            }
        });

        voiceCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/phoneIcon.png"))); // NOI18N
        voiceCallLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voiceCallLblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                voiceCallLblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                voiceCallLblMouseReleased(evt);
            }
        });

        txtChatLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/sms.png"))); // NOI18N
        txtChatLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtChatLblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtChatLblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtChatLblMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(oneToMany)
                .addGap(18, 18, 18)
                .addComponent(oneToOneLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileTransferLbl)
                .addGap(18, 18, 18)
                .addComponent(videoCallLbl)
                .addGap(29, 29, 29)
                .addComponent(EmailSendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(voiceCallLbl)
                .addGap(32, 32, 32)
                .addComponent(txtChatLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(oneToMany, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(oneToOneLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(fileTransferLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(videoCallLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(EmailSendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(voiceCallLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtChatLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1255, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlLiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLiveMouseClicked
        try {
            if (mouseSignal == 0) {
                broker.mouseClickAction(evt.getModifiers());
            } else {
                System.out.println("Mouse Dragging");
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AWTException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pnlLiveMouseClicked

    private void pnlLiveMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLiveMouseMoved
        try {
            broker.mouseMoveAction(evt.getX() * Screenwidth / pnlLive.getWidth(), evt.getY() * screenHeight / pnlLive.getHeight());
        } catch (RemoteException ex) {

        } catch (AWTException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pnlLiveMouseMoved

    private void pnlLiveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLiveMouseDragged
//        try {
//            mouseSignal=1;
//            broker.mouseDragAction(evt.getX(), evt.getY(), evt.getModifiers());
//        } catch (RemoteException ex) {
//            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (AWTException ex) {
//            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
//        }finally{
//            mouseSignal=0;
//        }
    }//GEN-LAST:event_pnlLiveMouseDragged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            boolean setDesktop = broker.setDesktop();//Change ServerClient Desktop Background to Solid Colour
            if (setDesktop) {
                System.out.println("Desktop is Set");
            } else {
                System.out.println("Desktop not Set");
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        }
        UserDTO serverClientDto = broker.getServerClientDto();
        if (serverClientDto == null) {
            System.out.println("im null");
            return;
        }
        Dimension screenZize = serverClientDto.getScreenZize();//getServerClients Screen Size to Config PnlLive
        this.Screenwidth = screenZize.width;
        this.screenHeight = screenZize.height;
        //pnlLive.setSize(this.Screenwidth, this.screenHeight);
        pnlLive.setPreferredSize(new Dimension(this.getWidth() - 10, this.getHeight() - 10));
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    while (ThreadSignal == 0) {
                        byte[] image = broker.startSharingDesktop(null);
                        //getServer Clients Desktop Capture and set it to the Live Panel
                        imgAppu = ImageIO.read(new ByteArrayInputStream(image));
                        pnlLive.repaint();
                    }
                } catch (RemoteException ex) {
                    try {
                        SysTray.displayTray("Viewer", "Partner Out...", "", TrayIcon.MessageType.WARNING);
                        ThreadSignal = 1;
                        Viewer.this.dispose();
                    } catch (AWTException ex1) {
                        Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        t.start();

    }//GEN-LAST:event_formWindowOpened

    private void pnlLiveMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_pnlLiveMouseWheelMoved
        try {
            broker.mouseWheelAction(evt.getWheelRotation());
        } catch (RemoteException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AWTException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pnlLiveMouseWheelMoved

    private void oneToOneLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneToOneLblMouseClicked
        pnlLive.setPreferredSize(new Dimension(this.getWidth() - 10, this.getHeight() - 10));
    }//GEN-LAST:event_oneToOneLblMouseClicked

    private void oneToOneLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneToOneLblMouseReleased
        oneToOneLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/one_to_one.png")));
    }//GEN-LAST:event_oneToOneLblMouseReleased

    private void oneToOneLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneToOneLblMousePressed
        oneToOneLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/raiocolour.png")));
    }//GEN-LAST:event_oneToOneLblMousePressed

    private void oneToManyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneToManyMouseClicked
        pnlLive.setPreferredSize(new Dimension(Screenwidth, screenHeight));
    }//GEN-LAST:event_oneToManyMouseClicked

    private void oneToManyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneToManyMousePressed
        oneToMany.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/onetomanycolour.png")));
    }//GEN-LAST:event_oneToManyMousePressed

    private void oneToManyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneToManyMouseReleased
        oneToMany.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/screenScale.png")));
    }//GEN-LAST:event_oneToManyMouseReleased

    private void fileTransferLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileTransferLblMousePressed
        fileTransferLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/send_file_filled.png")));
    }//GEN-LAST:event_fileTransferLblMousePressed

    private void fileTransferLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileTransferLblMouseReleased
        fileTransferLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/send_file.png")));
    }//GEN-LAST:event_fileTransferLblMouseReleased

    private void fileTransferLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileTransferLblMouseClicked
        FileSender sender = new FileSender(this.broker);
        sender.setVisible(true);
    }//GEN-LAST:event_fileTransferLblMouseClicked

    private void videoCallLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_videoCallLblMousePressed
        videoCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/video_call_Fill.png")));
    }//GEN-LAST:event_videoCallLblMousePressed

    private void videoCallLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_videoCallLblMouseReleased
        videoCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/video_call.png")));
    }//GEN-LAST:event_videoCallLblMouseReleased

    private void videoCallLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_videoCallLblMouseClicked
        videoCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/video_call_Fill.png")));
        //System.out.println("Video Chat Click****************************************");
        ViewerVideoChatController vChat = new ViewerVideoChatController(this.broker, 1);
        //System.out.println("VchatObject Creatred.....");
        //vChat.obj=1;
        vChat.setVisible(true);
        //System.out.println("Vchat Visibling.********************");

    }//GEN-LAST:event_videoCallLblMouseClicked

    private void EmailSendBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmailSendBtnMousePressed
        EmailSendBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/Gmail.png")));
    }//GEN-LAST:event_EmailSendBtnMousePressed

    private void EmailSendBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmailSendBtnMouseReleased
        EmailSendBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/Gmail_Fill.png")));
    }//GEN-LAST:event_EmailSendBtnMouseReleased

    private void EmailSendBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmailSendBtnMouseClicked
        EmailSender e = new EmailSender();
        e.setVisible(true);
    }//GEN-LAST:event_EmailSendBtnMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        KeyboardFocusManager focusManager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        focusManager.addKeyEventPostProcessor(new KeyEventPostProcessor() {
            @Override
            public boolean postProcessKeyEvent(KeyEvent e) {
                try {
                    Window windowAncestor = SwingUtilities.getWindowAncestor((Component) e.getSource());
                    if ((windowAncestor instanceof EmailSender) || (windowAncestor instanceof ViewerTextChat)) {
                        //broker.keyBoardAction(e.getKeyChar());
                    }else{
                        broker.keyBoardAction(e.getKeyChar());
                    }
                } catch (RemoteException ex) {
                    Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
                } catch (AWTException ex) {
                    Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
                }
                return true;
            }
        });
    }//GEN-LAST:event_formWindowGainedFocus

    private void voiceCallLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voiceCallLblMousePressed
        voiceCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/phoneIconFill.png")));
    }//GEN-LAST:event_voiceCallLblMousePressed

    private void voiceCallLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voiceCallLblMouseReleased
        voiceCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/phoneIcon.png")));
    }//GEN-LAST:event_voiceCallLblMouseReleased

    private void voiceCallLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voiceCallLblMouseClicked
        ViewerVoiceChatController voice = new ViewerVoiceChatController(broker, 1);
        voice.setVisible(true);
    }//GEN-LAST:event_voiceCallLblMouseClicked

    private void txtChatLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChatLblMousePressed
        txtChatLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/sms_filled.png")));
    }//GEN-LAST:event_txtChatLblMousePressed

    private void txtChatLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChatLblMouseReleased
        txtChatLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/sms.png")));
    }//GEN-LAST:event_txtChatLblMouseReleased

    private void txtChatLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChatLblMouseClicked
        ViewerTextChat txt = new ViewerTextChat(broker);
        txt.setVisible(true);
    }//GEN-LAST:event_txtChatLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viewer().setVisible(true);
            }
        });
    }

    public File[] getSelectedFiles() {
        return files;
    }

    public void setKeyboardFocusManagerSignal(int siganl) {
        KeyBoardFocusManagerSignal = siganl;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EmailSendBtn;
    private javax.swing.JLabel fileTransferLbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel oneToMany;
    private javax.swing.JLabel oneToOneLbl;
    private javax.swing.JPanel pnlLive;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JLabel txtChatLbl;
    private javax.swing.JLabel videoCallLbl;
    private javax.swing.JLabel voiceCallLbl;
    // End of variables declaration//GEN-END:variables
}
