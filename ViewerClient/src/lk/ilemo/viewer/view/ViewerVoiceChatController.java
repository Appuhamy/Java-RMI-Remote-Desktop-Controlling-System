/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ilemo.viewer.view;

import java.awt.AWTException;
import java.awt.TrayIcon;
import java.io.IOException;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.TargetDataLine;
import lk.ilemo.viewer.service.custom.Broker;
import lk.ilemo.viewer.service.other.ViewerFileWriter;
import static lk.ilemo.viewer.view.ViewerVideoChatController.getAudioFormat;
import lk.ilemo.viewer.view.other.SysTray;
import lk.ilemo.viewer.view.utils.PlayThread;
import lk.ilemo.viewer.view.utils.RecordThread;

/**
 *
 * @author Chamindu_Appuhamy
 */
public class ViewerVoiceChatController extends javax.swing.JFrame {

    /**
     * **********Client Utils***********************
     */
    public int port_Srrver = 8889;
    public String add_Server = "192.168.8.100";
    TargetDataLine audio_in;
    RecordThread r = new RecordThread();//This Object is Used to send Voice Data to the connected Server(Partner) 
    /**
     * **********Server Utils************************
     */
    public int port = 8889;//BroadCasting Port
    public SourceDataLine audio_in2;
    PlayThread p = new PlayThread();//When Partner Send Data this class convert Sent Data to the Voice Data 

    public int obj = 1;
    private Broker broker;
    public int ThreadSignal = 1;
    public int timerSignal = 1;
    private ViewerVoiceChatController thisObject = this;
    private String caller;
    public static AudioFormat getAudioFormat() {
        float sampleRate = 8000.0f;
        int sampleSizeInBit = 16;
        int channel = 2;
        boolean signed = true;
        boolean bigEndian = false;
        return new AudioFormat(sampleRate, sampleSizeInBit, channel, signed, bigEndian);
    }
    private ViewerDashBoard dsh = null;

    /**
     * Creates new form ViewerVoiceChatController
     */
    public ViewerVoiceChatController() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        timer();
    }

    public ViewerVoiceChatController(Broker broker, int obj, ViewerDashBoard dsh) {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.broker = broker;
        this.dsh = dsh;
        this.obj = obj;
        if (obj == 1) {
            this.add_Server = broker.getServerClientDto().getIPAddress();
//            String[] split = ipAddress.split("/");
//            this.add_Server = split[1];
        } else if (obj == 0) {
            String ipAddress = broker.getControllerClientDto().getIPAddress();
            String[] split = ipAddress.split("/");
            this.add_Server = split[1];
        }
        notifying();
    }

    public ViewerVoiceChatController(Broker broker, int obj) {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.broker = broker;
        this.dsh = dsh;
        this.obj = obj;
        if (obj == 1) {
            this.add_Server = broker.getServerClientDto().getIPAddress();
//            String[] split = ipAddress.split("/");
//            this.add_Server = split[1];
        } else if (obj == 0) {
            String ipAddress = broker.getControllerClientDto().getIPAddress();
            String[] split = ipAddress.split("/");
            this.add_Server = split[1];
        }
        notifying();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        detailPnl = new javax.swing.JPanel();
        callerName = new javax.swing.JLabel();
        timeLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        endCallLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Viewer Voice");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/callDsh.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        detailPnl.setBackground(new java.awt.Color(0, 204, 255));

        callerName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        callerName.setForeground(new java.awt.Color(153, 153, 153));
        callerName.setText("User Name");

        timeLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        timeLbl.setForeground(new java.awt.Color(102, 102, 102));
        timeLbl.setText("Time");

        javax.swing.GroupLayout detailPnlLayout = new javax.swing.GroupLayout(detailPnl);
        detailPnl.setLayout(detailPnlLayout);
        detailPnlLayout.setHorizontalGroup(
            detailPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailPnlLayout.createSequentialGroup()
                .addGroup(detailPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(callerName))
                    .addGroup(detailPnlLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(timeLbl)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        detailPnlLayout.setVerticalGroup(
            detailPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(callerName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLbl)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/CallUserProfile.png"))); // NOI18N

        endCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/endCall.png"))); // NOI18N
        endCallLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                endCallLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(detailPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(endCallLbl))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(endCallLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void endCallLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endCallLblMouseClicked
        r.byte_buffer = new byte[0];
        ThreadSignal = 0;
        try {
            ViewerFileWriter.callLoggerFileWriter("",caller, ViewerFileWriter.callType.GETCALL);
        } catch (IOException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            broker.callOFF(obj);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        }
        disposeMe();
    }//GEN-LAST:event_endCallLblMouseClicked

    /**
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewerVoiceChatController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewerVoiceChatController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewerVoiceChatController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewerVoiceChatController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewerVoiceChatController().setVisible(true);
            }
        });
    }

    private void notifying() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (ThreadSignal != 0) {
                    try {
                        int result = broker.notifyViewerVoiceCall(obj);
                        System.out.println(result);
                        if (result == 1) {
                            //answerLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                            //rejectLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                            //endCallLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ilemo/viewer/view/icons/endCall.png")));
                            initAudio();
                            init_Audio_Server();
                            if (obj == 1) {
                                callerName.setText(broker.getServerClientDto().getUserComputerName());
                                caller=broker.getServerClientDto().getUserComputerName();
                            } else if (obj == 0) {
                                callerName.setText(broker.getControllerClientDto().getUserComputerName());
                                caller=broker.getControllerClientDto().getUserComputerName();
                            }
                            timer();
                            ThreadSignal = 0;
                        } else if (result == 0) {
                            SysTray.displayTray("Viewer Voice Call", "User Busy..", "", TrayIcon.MessageType.ERROR);
                            ThreadSignal = 0;
                            ViewerVoiceChatController.this.disposeMe();
                        } else if (result == 2) {
                            timeLbl.setText("Calling.....");
                        }
                    } catch (RemoteException ex) {
                        Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (AWTException ex) {
                        Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                System.out.println("Stop Notification.....");
            }

        }).start();

    }

    private void timer() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                int s = 0;
                int m = 0;
                int h = 0;
                while (timerSignal != 0) {
                    timeLbl.setText("" + h + "." + m + "." + s);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    s++;
                    if (s == 60) {
                        m++;
                        s = 0;
                    } else if (m == 60) {
                        h++;
                        m = 0;
                        s = 0;
                    }
                }
                System.out.println("Timer Stop....");
            }
        }).start();
    }

    public void initAudio() {
        AudioFormat format = getAudioFormat();
        DataLine.Info info = new DataLine.Info(TargetDataLine.class, format);
        if (!AudioSystem.isLineSupported(info)) {
            System.out.println("NOT SUPPORT..");
            System.exit(0);
        }
        try {
            audio_in = (TargetDataLine) AudioSystem.getLine(info);
            audio_in.open();
            audio_in.start();

            InetAddress inet = InetAddress.getByName(add_Server);
            r.audio_in = audio_in;
            r.dout = new DatagramSocket();
            r.server_ip = inet;
            r.server_port = port_Srrver;
            r.Client_Voice = true;
            r.start();
        } catch (LineUnavailableException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SocketException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void init_Audio_Server() {
        AudioFormat format = getAudioFormat();
        DataLine.Info info_out = new DataLine.Info(SourceDataLine.class, format);
        if (!AudioSystem.isLineSupported(info_out)) {
            System.out.println("NOT SUPPORT....");
            System.exit(0);
        }
        try {
            audio_in2 = (SourceDataLine) AudioSystem.getLine(info_out);
            audio_in2.open();
            audio_in2.start();
            p.VChat = this;
            p.din = new DatagramSocket(port);
            p.audio_out = audio_in2;
            p.Server_Voice = true;
            p.start();
        } catch (LineUnavailableException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SocketException ex) {
            Logger.getLogger(ViewerVoiceChatController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void disposeMe() {
        ThreadSignal = 0;
        timerSignal = 0;
        p.Server_Voice = false;
        r.Client_Voice = false;
        if (dsh != null) {
            dsh.VCall = null;
        }
        this.dispose();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel callerName;
    private javax.swing.JPanel detailPnl;
    private javax.swing.JLabel endCallLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel timeLbl;
    // End of variables declaration//GEN-END:variables

}
